# Default values for mcp-oauth2-proxy.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

provider:
  name: "" # defaults to google
  clientID: ""
  clientSecret: ""
  allowedEmailDomains: [] # list of Go regular expressions

proxy:
  allowedRedirectURLs: [] # list of Go regular expressions
  hosts: [] # hosts configuration
    # - host: mcp.example.com
    #   scopes:
    #     - name: toolbox:read_only
    #       description: Allows all read-only operations.
    #       covers:
    #         - toolbox:get_resource
    #         - toolbox:list_resources
    #     - name: toolbox:read_write
    #       description: Allows all operations.
    #       covers:
    #         - toolbox:read_only
    #         - toolbox:get_resource
    #         - toolbox:list_resources
    #         - toolbox:create_resource
    #         - toolbox:update_resource
    #         - toolbox:delete_resource
    #     - name: toolbox:get_resource
    #       description: Allows retrieving resources.
    #     - name: toolbox:list_resources
    #       description: Allows listing resources.
    #     - name: toolbox:create_resource
    #       description: Allows creating resources.
    #     - name: toolbox:update_resource
    #       description: Allows updating resources.
    #     - name: toolbox:delete_resource
    #       description: Allows deleting resources.

server:
  cors: false

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: ghcr.io/matheuscscp/mcp-oauth2-proxy
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /healthz
    port: http
readinessProbe:
  httpGet:
    path: /readyz
    port: http

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# This section is for setting up the PodMonitor for Prometheus monitoring more information can be found here: https://prometheus-operator.dev/docs/operator/api/#podmonitor
podMonitor:
  # Specifies whether a PodMonitor should be created
  enabled: false
  # The port name or number to scrape metrics from
  port: http
  # The HTTP path to scrape metrics from
  path: /metrics
  # How frequently to scrape metrics
  interval: 30s
  # Timeout for each scrape
  scrapeTimeout: 10s
  # HTTP scheme to use for scraping
  scheme: http
  # Whether to honor labels from scraped data
  honorLabels: false
  # Whether to honor timestamps from scraped data
  honorTimestamps: true
  # Additional labels to add to the PodMonitor
  labels: {}
  # Additional annotations to add to the PodMonitor
  annotations: {}
  # Metric relabeling configurations
  metricRelabelings: []
  # Relabeling configurations
  relabelings: []
  # Namespace selector for the PodMonitor
  namespaceSelector: {}
